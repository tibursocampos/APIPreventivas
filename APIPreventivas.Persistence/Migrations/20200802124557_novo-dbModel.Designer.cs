// <auto-generated />
using System;
using APIPreventivas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIPreventivas.Persistence.Migrations
{
    [DbContext(typeof(APIPreventivaContext))]
    [Migration("20200802124557_novo-dbModel")]
    partial class novodbModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIPreventivas.Domain.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataProgramacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAlvo")
                        .HasColumnType("int");

                    b.Property<int>("IdTecnico")
                        .HasColumnType("int");

                    b.Property<int>("TipoAtividade")
                        .HasColumnType("int");

                    b.HasKey("IdAtividade");

                    b.HasIndex("IdAlvo");

                    b.HasIndex("IdTecnico");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("APIPreventivas.Models.Alvo", b =>
                {
                    b.Property<int>("IdAlvo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Concluido")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCronograma")
                        .HasColumnType("int");

                    b.Property<string>("IdSite")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdAlvo");

                    b.HasIndex("IdCronograma");

                    b.HasIndex("IdSite")
                        .IsUnique()
                        .HasFilter("[IdSite] IS NOT NULL");

                    b.ToTable("Alvos");
                });

            modelBuilder.Entity("APIPreventivas.Models.Cronograma", b =>
                {
                    b.Property<int>("IdCronograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Concluido")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSupervisor")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.HasKey("IdCronograma");

                    b.HasIndex("IdSupervisor");

                    b.ToTable("Cronogramas");
                });

            modelBuilder.Entity("APIPreventivas.Models.Site", b =>
                {
                    b.Property<string>("EndId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ANF")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Site3g")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteGsm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteLte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EndId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("APIPreventivas.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ANF")
                        .HasColumnType("int");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permissao")
                        .HasColumnType("int");

                    b.Property<string>("PrimeiroNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimoNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("APIPreventivas.Domain.Models.Atividade", b =>
                {
                    b.HasOne("APIPreventivas.Models.Alvo", "Alvos")
                        .WithMany("Atividades")
                        .HasForeignKey("IdAlvo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPreventivas.Models.Usuario", "Tecnicos")
                        .WithMany("Atividades")
                        .HasForeignKey("IdTecnico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("APIPreventivas.Models.Alvo", b =>
                {
                    b.HasOne("APIPreventivas.Models.Cronograma", "Cronogramas")
                        .WithMany("Alvos")
                        .HasForeignKey("IdCronograma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPreventivas.Models.Site", "Sites")
                        .WithOne("Alvos")
                        .HasForeignKey("APIPreventivas.Models.Alvo", "IdSite");
                });

            modelBuilder.Entity("APIPreventivas.Models.Cronograma", b =>
                {
                    b.HasOne("APIPreventivas.Models.Usuario", "Supervisores")
                        .WithMany("Cronogramas")
                        .HasForeignKey("IdSupervisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
